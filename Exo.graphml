<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:demostyle2="http://www.yworks.com/yFilesHTML/demos/FlatDemoStyle/2.0" xmlns:demostyle="http://www.yworks.com/yFilesHTML/demos/FlatDemoStyle/1.0" xmlns:icon-style="http://www.yworks.com/yed-live/icon-style/1.0" xmlns:bpmn="http://www.yworks.com/xml/yfiles-bpmn/2.0" xmlns:demotablestyle="http://www.yworks.com/yFilesHTML/demos/FlatDemoTableStyle/1.0" xmlns:uml="http://www.yworks.com/yFilesHTML/demos/UMLDemoStyle/1.0" xmlns:GraphvizNodeStyle="http://www.yworks.com/yFilesHTML/graphviz-node-style/1.0" xmlns:VuejsNodeStyle="http://www.yworks.com/demos/yfiles-vuejs-node-style/1.0" xmlns:explorer-style="http://www.yworks.com/data-explorer/1.0" xmlns:y="http://www.yworks.com/xml/yfiles-common/3.0" xmlns:x="http://www.yworks.com/xml/yfiles-common/markup/3.0" xmlns:sys="http://www.yworks.com/xml/yfiles-common/markup/primitives/2.0" xmlns:yjs="http://www.yworks.com/xml/yfiles-for-html/2.0/xaml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml.html/2.0/ygraphml.xsd ">
  <key id="d0" for="node" attr.type="int" attr.name="zOrder" y:attr.uri="http://www.yworks.com/xml/yfiles-z-order/1.0/zOrder" />
  <key id="d1" for="node" attr.type="boolean" attr.name="Expanded" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/Expanded">
    <default>true</default>
  </key>
  <key id="d2" for="node" attr.type="string" attr.name="url" />
  <key id="d3" for="node" attr.type="string" attr.name="description" />
  <key id="d4" for="node" attr.name="NodeLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeLabels" />
  <key id="d5" for="node" attr.name="NodeGeometry" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeGeometry" />
  <key id="d6" for="all" attr.name="UserTags" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/UserTags" />
  <key id="d7" for="node" attr.name="NodeStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeStyle" />
  <key id="d8" for="node" attr.name="NodeViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/NodeViewState" />
  <key id="d9" for="edge" attr.type="string" attr.name="url" />
  <key id="d10" for="edge" attr.type="string" attr.name="description" />
  <key id="d11" for="edge" attr.name="EdgeLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeLabels" />
  <key id="d12" for="edge" attr.name="EdgeGeometry" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeGeometry" />
  <key id="d13" for="edge" attr.name="EdgeStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeStyle" />
  <key id="d14" for="edge" attr.name="EdgeViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/EdgeViewState" />
  <key id="d15" for="port" attr.name="PortLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortLabels" />
  <key id="d16" for="port" attr.name="PortLocationParameter" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortLocationParameter">
    <default>
      <x:Static Member="y:FreeNodePortLocationModel.NodeCenterAnchored" />
    </default>
  </key>
  <key id="d17" for="port" attr.name="PortStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortStyle">
    <default>
      <x:Static Member="y:VoidPortStyle.Instance" />
    </default>
  </key>
  <key id="d18" for="port" attr.name="PortViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/PortViewState" />
  <key id="d19" attr.name="SharedData" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/SharedData" />
  <data key="d19">
    <y:SharedData>
      <y:InteriorLabelModel x:Key="1" />
      <y:CompositeLabelModelParameter x:Key="2">
        <y:CompositeLabelModelParameter.Parameter>
          <y:InteriorLabelModelParameter Position="Center" Model="{y:GraphMLReference 1}" />
        </y:CompositeLabelModelParameter.Parameter>
        <y:CompositeLabelModelParameter.Model>
          <y:CompositeLabelModel>
            <y:CompositeLabelModel.LabelModels>
              <y:ExteriorLabelModel Insets="5" />
              <y:GraphMLReference ResourceKey="1" />
              <y:FreeNodeLabelModel />
            </y:CompositeLabelModel.LabelModels>
          </y:CompositeLabelModel>
        </y:CompositeLabelModelParameter.Model>
      </y:CompositeLabelModelParameter>
      <y:SmartEdgeLabelModel x:Key="3" />
    </y:SharedData>
  </data>
  <graph id="G" edgedefault="directed">
    <data key="d6">
      <y:Json>{&quot;version&quot;:&quot;2.0.0&quot;,&quot;theme&quot;:{&quot;name&quot;:&quot;light&quot;,&quot;version&quot;:&quot;1.0.0&quot;},&quot;bridge-style&quot;:&quot;ARC_SCALED&quot;}</y:Json>
    </data>
    <node id="node2">
      <data key="d0">0</data>
      <data key="d5">
        <y:RectD X="816" Y="154" Width="224" Height="866" />
      </data>
      <data key="d7">
        <uml:UMLNodeStyle fill="#FF607D8B" highlightFill="#FFA3F1BB">
          <uml:UMLNodeStyle.model>
            <uml:UMLClassModel stereotype="" constraint="" className="Carta" attributesOpen="true" operationsOpen="true">
              <uml:UMLClassModel.attributes>
                <x:Array Type="sys:Object">
                  <sys:String>~ aliado: boolean</sys:String>
                  <sys:String>~ arrasar: boolean</sys:String>
                  <sys:String>+ array: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ barajarSound: Sound</sys:String>
                  <sys:String>+ coste: int</sys:String>
                  <sys:String>~ damageSound: Sound</sys:String>
                  <sys:String>~ drenaje: boolean</sys:String>
                  <sys:String>~ enabled: boolean</sys:String>
                  <sys:String>~ errorSound: Sound</sys:String>
                  <sys:String>~ fusionSound: Sound</sys:String>
                  <sys:String>~ haAtacado: boolean</sys:String>
                  <sys:String>~ hechizo: boolean</sys:String>
                  <sys:String>~ imbloqueable: boolean</sys:String>
                  <sys:String>~ invocarSound: Sound</sys:String>
                  <sys:String>+ nombre: String</sys:String>
                  <sys:String>+ poder: int</sys:String>
                  <sys:String>~ targetable: boolean</sys:String>
                  <sys:String>+ zona: Zona</sys:String>
                </x:Array>
              </uml:UMLClassModel.attributes>
              <uml:UMLClassModel.operations>
                <x:Array Type="sys:Object">
                  <sys:String>+ act(float): void</sys:String>
                  <sys:String>- borroDeMano(Zona): void</sys:String>
                  <sys:String>- checkDrenaje(Carta, Carta): void</sys:String>
                  <sys:String>+ combate(Carta, Carta): void</sys:String>
                  <sys:String>- die(): void</sys:String>
                  <sys:String>- fusionar(Carta, Carta): void</sys:String>
                  <sys:String>+ getArray(): ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>+ getDropTarget(): DropTargetActor</sys:String>
                  <sys:String>+ getEnabled(): boolean</sys:String>
                  <sys:String>+ getPoder(): int</sys:String>
                  <sys:String>+ getZona(): Zona</sys:String>
                  <sys:String>+ isAliado(): boolean</sys:String>
                  <sys:String>+ isHaAtacado(): boolean</sys:String>
                  <sys:String>+ isHechizo(): boolean</sys:String>
                  <sys:String>+ isTargetable(): boolean</sys:String>
                  <sys:String>+ morph(int, Carta): Carta</sys:String>
                  <sys:String>+ moveToActor(BaseActor): void</sys:String>
                  <sys:String>+ onDrop(): void</sys:String>
                  <sys:String>+ remove(Carta): boolean</sys:String>
                  <sys:String>+ setAliado(boolean): void</sys:String>
                  <sys:String>+ setArrasar(boolean): void</sys:String>
                  <sys:String>+ setArray(ArrayList&lt;Carta&gt;): void</sys:String>
                  <sys:String>+ setCoste(int): void</sys:String>
                  <sys:String>+ setDrenaje(boolean): void</sys:String>
                  <sys:String>+ setEnabled(boolean): void</sys:String>
                  <sys:String>+ setHaAtacado(boolean): void</sys:String>
                  <sys:String>+ setHechizo(boolean): void</sys:String>
                  <sys:String>+ setImbloqueable(boolean): void</sys:String>
                  <sys:String>+ setNombre(String): void</sys:String>
                  <sys:String>+ setPoder(int): void</sys:String>
                  <sys:String>+ setTargetable(boolean): void</sys:String>
                  <sys:String>+ setZona(Zona): void</sys:String>
                  <sys:String>- usarHechizo(): void</sys:String>
                </x:Array>
              </uml:UMLClassModel.operations>
            </uml:UMLClassModel>
          </uml:UMLNodeStyle.model>
        </uml:UMLNodeStyle>
      </data>
      <port name="port0">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="1.0,0.5" />
        </data>
      </port>
      <port name="port1">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="-9.079903168388423E-7,0.5000003962139554" />
        </data>
      </port>
      <port name="port2">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="-9.079903168388423E-7,0.5000003962139554" />
        </data>
      </port>
    </node>
    <node id="node3">
      <data key="d0">0</data>
      <data key="d5">
        <y:RectD X="198" Y="-163" Width="438" Height="1813" />
      </data>
      <data key="d7">
        <uml:UMLNodeStyle fill="#FF607D8B" highlightFill="#FFA3F1BB">
          <uml:UMLNodeStyle.model>
            <uml:UMLClassModel stereotype="" constraint="" className="OCG" attributesOpen="true" operationsOpen="true">
              <uml:UMLClassModel.attributes>
                <x:Array Type="sys:Object">
                  <sys:String>~ ataqueSound: Sound</sys:String>
                  <sys:String>~ barajarSound: Sound</sys:String>
                  <sys:String>+ batch: SpriteBatch</sys:String>
                  <sys:String>+ campo: Zona</sys:String>
                  <sys:String>~ campoArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>+ campoOp: Zona</sys:String>
                  <sys:String>~ campoOpArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ cartas: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ clase1: String</sys:String>
                  <sys:String>~ clase2: String</sys:String>
                  <sys:String>~ clase3: String</sys:String>
                  <sys:String>~ claseJugador: int</sys:String>
                  <sys:String>~ claseOponente: int</sys:String>
                  <sys:String>~ claseRandom: String</sys:String>
                  <sys:String>~ crearCarta: TextButton</sys:String>
                  <sys:String>~ cristalesJ: int</sys:String>
                  <sys:String>~ cristalesOp: int</sys:String>
                  <sys:String>~ errorSound: Sound</sys:String>
                  <sys:String>~ fondo: Table</sys:String>
                  <sys:String>~ fondoLose: Image</sys:String>
                  <sys:String>~ fondoM: Table</sys:String>
                  <sys:String>~ fondoWin: Image</sys:String>
                  <sys:String>~ gameOver: Boolean</sys:String>
                  <sys:String>+ gameOverStage: Stage</sys:String>
                  <sys:String>~ invocarSound: Sound</sys:String>
                  <sys:String>~ juegoMomento: Boolean</sys:String>
                  <sys:String>~ jugadorActivo: Boolean</sys:String>
                  <sys:String>~ jugar: TextButton</sys:String>
                  <sys:String>~ labelCentral: Label</sys:String>
                  <sys:String>+ mainStage: Stage</sys:String>
                  <sys:String>~ manoArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ manoOpArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>+ mazo: Zona</sys:String>
                  <sys:String>~ mazoArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ mazoOpArray: ArrayList&lt;Carta&gt;</sys:String>
                  <sys:String>~ menuMomento: Boolean</sys:String>
                  <sys:String>~ musica: Music</sys:String>
                  <sys:String>~ musicaMomento: Boolean</sys:String>
                  <sys:String>+ renderer: ShapeRenderer</sys:String>
                  <sys:String>+ retratoEnemigo: Zona</sys:String>
                  <sys:String>+ retratoJugador: Zona</sys:String>
                  <sys:String>~ ritualDeInvocacion: Carta</sys:String>
                  <sys:String>~ root: Table</sys:String>
                  <sys:String>+ settingsStage: Stage</sys:String>
                  <sys:String>+ skin: Skin</sys:String>
                  <sys:String>~ turno: int</sys:String>
                  <sys:String>- uiLabel: Label</sys:String>
                  <sys:String>+ uiStage: Stage</sys:String>
                  <sys:String>~ uiTablaFondo: Table</sys:String>
                  <sys:String>~ uiTablaFondo2: Table</sys:String>
                  <sys:String>~ uiTablaFondo3: Table</sys:String>
                  <sys:String>+ vidaActual: int</sys:String>
                  <sys:String>+ vidaEnemigo: int</sys:String>
                  <sys:String>~ vmEnemigo: Label</sys:String>
                  <sys:String>~ vmJugador: Label</sys:String>
                  <sys:String>~ volumen: float</sys:String>
                  <sys:String>~ zona1: Zona</sys:String>
                  <sys:String>~ zona2: Zona</sys:String>
                  <sys:String>~ zona3: Zona</sys:String>
                  <sys:String>~ zona4: Zona</sys:String>
                  <sys:String>~ zona5: Zona</sys:String>
                  <sys:String>~ zonaE1: Zona</sys:String>
                  <sys:String>~ zonaE2: Zona</sys:String>
                  <sys:String>~ zonaE3: Zona</sys:String>
                  <sys:String>~ zonaE4: Zona</sys:String>
                  <sys:String>~ zonaE5: Zona</sys:String>
                  <sys:String>+ zonaMano: Zona</sys:String>
                  <sys:String>~ zonas: Array&lt;Zona&gt;</sys:String>
                  <sys:String>~ zonasDeMonstruo: ArrayList&lt;Zona&gt;</sys:String>
                  <sys:String>~ zonasMonstruoEnemigas: ArrayList&lt;Zona&gt;</sys:String>
                </x:Array>
              </uml:UMLClassModel.attributes>
              <uml:UMLClassModel.operations>
                <x:Array Type="sys:Object">
                  <sys:String>- actualizarInterfaz(): void</sys:String>
                  <sys:String>- checkClases(): void</sys:String>
                  <sys:String>- checkGanador(): void</sys:String>
                  <sys:String>- crearCampos(): void</sys:String>
                  <sys:String>- crearLabelsVM(): void</sys:String>
                  <sys:String>- crearMazos(): void</sys:String>
                  <sys:String>- crearRetratos(): void</sys:String>
                  <sys:String>- crearRitualInvocacion(Carta): void</sys:String>
                  <sys:String>- crearZMAliados(): void</sys:String>
                  <sys:String>- crearZonasMonstruoOp(): void</sys:String>
                  <sys:String>+ create(): void</sys:String>
                  <sys:String>- darTamaño(Carta): void</sys:String>
                  <sys:String>- desocuparZonas(): void</sys:String>
                  <sys:String>+ dispose(): void</sys:String>
                  <sys:String>+ getCristalesJ(): int</sys:String>
                  <sys:String>+ getCristalesOp(): int</sys:String>
                  <sys:String>+ getVidaActual(): int</sys:String>
                  <sys:String>+ getVidaEnemigo(): int</sys:String>
                  <sys:String>+ getVolumen(): float</sys:String>
                  <sys:String>+ getZonasDeMonstruo(): ArrayList&lt;Zona&gt;</sys:String>
                  <sys:String>+ getZonasMonstruoEnemigas(): ArrayList&lt;Zona&gt;</sys:String>
                  <sys:String>+ hide(): void</sys:String>
                  <sys:String>- matarMonstruos(): void</sys:String>
                  <sys:String>- oponenteAtaca(): void</sys:String>
                  <sys:String>- oponenteAtacaDirecto(): void</sys:String>
                  <sys:String>- oponenteInvoca(): void</sys:String>
                  <sys:String>- pasarTurno(): void</sys:String>
                  <sys:String>+ puedoPegar(): boolean</sys:String>
                  <sys:String>+ render(float): void</sys:String>
                  <sys:String>+ render(): void</sys:String>
                  <sys:String>+ reordenarMano(): void</sys:String>
                  <sys:String>+ resize(int, int): void</sys:String>
                  <sys:String>+ robarCarta(): void</sys:String>
                  <sys:String>+ setCristalesJ(int): void</sys:String>
                  <sys:String>+ setVidaActual(int): void</sys:String>
                  <sys:String>+ setVidaEnemigo(int): void</sys:String>
                  <sys:String>+ show(): void</sys:String>
                  <sys:String>- terminarJuego(): void</sys:String>
                </x:Array>
              </uml:UMLClassModel.operations>
            </uml:UMLClassModel>
          </uml:UMLNodeStyle.model>
        </uml:UMLNodeStyle>
      </data>
      <port name="port0">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="0.9999998063441651,0.5" />
        </data>
      </port>
      <port name="port1">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="0.9999998063441651,0.493794464241389" />
        </data>
      </port>
    </node>
    <node id="node0">
      <data key="d0">0</data>
      <data key="d5">
        <y:RectD X="1069" Y="880" Width="189" Height="322" />
      </data>
      <data key="d7">
        <uml:UMLNodeStyle fill="#FF607D8B" highlightFill="#FFA3F1BB">
          <uml:UMLNodeStyle.model>
            <uml:UMLClassModel stereotype="" constraint="" className="Parametros" attributesOpen="true" operationsOpen="true">
              <uml:UMLClassModel.attributes>
                <x:Array Type="sys:Object">
                  <sys:String>+ altoCarta: int</sys:String>
                  <sys:String>- altoPantalla: int</sys:String>
                  <sys:String>+ anchoCarta: int</sys:String>
                  <sys:String>- anchoPantalla: int</sys:String>
                  <sys:String>+ score: int</sys:String>
                  <sys:String>+ vidaTotalMax: int</sys:String>
                </x:Array>
              </uml:UMLClassModel.attributes>
              <uml:UMLClassModel.operations>
                <x:Array Type="sys:Object">
                  <sys:String>+ getAltoCarta(): int</sys:String>
                  <sys:String>+ getAltoPantalla(): int</sys:String>
                  <sys:String>+ getAnchoCarta(): int</sys:String>
                  <sys:String>+ getAnchoPantalla(): int</sys:String>
                  <sys:String>+ getScore(): int</sys:String>
                  <sys:String>+ getVidaTotalMax(): int</sys:String>
                  <sys:String>+ setAltoCarta(int): void</sys:String>
                  <sys:String>+ setAltoPantalla(int): void</sys:String>
                  <sys:String>+ setAnchoCarta(int): void</sys:String>
                  <sys:String>+ setAnchoPantalla(int): void</sys:String>
                  <sys:String>+ setScore(int): void</sys:String>
                  <sys:String>+ setVidaTotalMax(int): void</sys:String>
                </x:Array>
              </uml:UMLClassModel.operations>
            </uml:UMLClassModel>
          </uml:UMLNodeStyle.model>
        </uml:UMLNodeStyle>
      </data>
    </node>
    <node id="node1">
      <data key="d0">0</data>
      <data key="d5">
        <y:RectD X="1066" Y="-163" Width="196" Height="223" />
      </data>
      <data key="d7">
        <uml:UMLNodeStyle fill="#FF607D8B" highlightFill="#FFA3F1BB">
          <uml:UMLNodeStyle.model>
            <uml:UMLClassModel stereotype="" constraint="" className="Zona" attributesOpen="true" operationsOpen="true">
              <uml:UMLClassModel.attributes>
                <x:Array Type="sys:Object">
                  <sys:String>~ aliado: boolean</sys:String>
                  <sys:String>+ carta: Carta</sys:String>
                  <sys:String>~ ocupado: boolean</sys:String>
                </x:Array>
              </uml:UMLClassModel.attributes>
              <uml:UMLClassModel.operations>
                <x:Array Type="sys:Object">
                  <sys:String>+ getCarta(): Carta</sys:String>
                  <sys:String>+ isAliado(): boolean</sys:String>
                  <sys:String>+ isOcupado(): boolean</sys:String>
                  <sys:String>+ isTargetable(): boolean</sys:String>
                  <sys:String>+ isTouchable(): boolean</sys:String>
                  <sys:String>+ setAliado(boolean): void</sys:String>
                  <sys:String>+ setCarta(Carta): void</sys:String>
                  <sys:String>+ setOcupado(boolean): void</sys:String>
                  <sys:String>+ setTargetable(boolean): void</sys:String>
                </x:Array>
              </uml:UMLClassModel.operations>
            </uml:UMLClassModel>
          </uml:UMLNodeStyle.model>
        </uml:UMLNodeStyle>
      </data>
      <port name="port0">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="-2.0177562572250596E-6,0.500001027221367" />
        </data>
      </port>
      <port name="port1">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="0.5,1.0" />
        </data>
      </port>
      <port name="port2">
        <data key="d16">
          <y:FreeNodePortLocationModelParameter Ratio="-1.5565548245163251E-6,0.4494959767163165" />
        </data>
      </port>
    </node>
    <edge id="edge1" source="node2" target="node1" sourceport="port0" targetport="port1">
      <data key="d11">
        <x:List>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="0" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="LEFT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>zona</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
        </x:List>
      </data>
      <data key="d12">
        <x:List>
          <y:Bend Location="1163.5903954802263,731.9525423728815" />
        </x:List>
      </data>
      <data key="d13">
        <yjs:PolylineEdgeStyle smoothingLength="20">
          <yjs:PolylineEdgeStyle.stroke>
            <yjs:Stroke fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.stroke>
          <yjs:PolylineEdgeStyle.sourceArrow>
            <yjs:Arrow type="DIAMOND" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.sourceArrow>
          <yjs:PolylineEdgeStyle.targetArrow>
            <yjs:Arrow type="SIMPLE" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.targetArrow>
        </yjs:PolylineEdgeStyle>
      </data>
    </edge>
    <edge id="edge3" source="node3" target="node2" sourceport="port0" targetport="port1">
      <data key="d11">
        <x:List>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="0" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="LEFT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>*</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>manoArray</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
        </x:List>
      </data>
      <data key="d12">
        <x:List>
          <y:Bend Location="753.0,1046.0" />
          <y:Bend Location="753.0,731.953" />
        </x:List>
      </data>
      <data key="d13">
        <yjs:PolylineEdgeStyle smoothingLength="20">
          <yjs:PolylineEdgeStyle.stroke>
            <yjs:Stroke fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.stroke>
          <yjs:PolylineEdgeStyle.sourceArrow>
            <yjs:Arrow type="DIAMOND" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.sourceArrow>
          <yjs:PolylineEdgeStyle.targetArrow>
            <yjs:Arrow type="SIMPLE" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.targetArrow>
        </yjs:PolylineEdgeStyle>
      </data>
    </edge>
    <edge id="edge0" source="node3" target="node1" sourceport="port1" targetport="port2">
      <data key="d11">
        <x:List>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="0" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="LEFT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>*</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>zonasDeMonstruo</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
        </x:List>
      </data>
      <data key="d12">
        <x:List>
          <y:Bend Location="690.0,1031.0" />
          <y:Bend Location="690.0,-29.098" />
        </x:List>
      </data>
      <data key="d13">
        <yjs:PolylineEdgeStyle smoothingLength="20">
          <yjs:PolylineEdgeStyle.stroke>
            <yjs:Stroke fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.stroke>
          <yjs:PolylineEdgeStyle.sourceArrow>
            <yjs:Arrow type="DIAMOND" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.sourceArrow>
          <yjs:PolylineEdgeStyle.targetArrow>
            <yjs:Arrow type="SIMPLE" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.targetArrow>
        </yjs:PolylineEdgeStyle>
      </data>
    </edge>
    <edge id="edge2" source="node1" target="node2" sourceport="port0" targetport="port1">
      <data key="d11">
        <x:List>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="0" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="LEFT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>1</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="-6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
          <y:Label>
            <y:Label.Text>carta</y:Label.Text>
            <y:Label.LayoutParameter>
              <y:SmartEdgeLabelModelParameter Model="{y:GraphMLReference 3}" SegmentRatio="1" Distance="6" />
            </y:Label.LayoutParameter>
            <y:Label.Style>
              <yjs:DefaultLabelStyle backgroundFill="WHITE" horizontalTextAlignment="RIGHT" wrapping="WORD" clipText="false" backgroundStroke="WHITE" font="'Arial'" autoFlip="false" textFill="BLACK" textSize="8" />
            </y:Label.Style>
          </y:Label>
        </x:List>
      </data>
      <data key="d12">
        <x:List>
          <y:Bend Location="753.0,-14.097999999999999" />
          <y:Bend Location="753.0,731.953" />
        </x:List>
      </data>
      <data key="d13">
        <yjs:PolylineEdgeStyle smoothingLength="20">
          <yjs:PolylineEdgeStyle.stroke>
            <yjs:Stroke fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.stroke>
          <yjs:PolylineEdgeStyle.sourceArrow>
            <yjs:Arrow type="DIAMOND" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.sourceArrow>
          <yjs:PolylineEdgeStyle.targetArrow>
            <yjs:Arrow type="SIMPLE" stroke="#bbbbbb" fill="#bbbbbb" />
          </yjs:PolylineEdgeStyle.targetArrow>
        </yjs:PolylineEdgeStyle>
      </data>
    </edge>
  </graph>
</graphml>